int findMin(vector<int>& nums) {
        int l=0;
        int r=nums.size()-1;
        
        if(nums.size()==1||nums[l]<=nums[r])            // check if is already sorted then arr[0] is the minimum element/pivot
            return nums[l];
        
        
        while(l<=r)
        {
            int mid=l+(r-l)/2;
            if(mid<nums.size()&&nums[mid]>nums[mid+1])  //check if mid+1 is pivot careful at the edge case
            {
                return nums[mid+1];
            }
            else if(nums[l]<=nums[mid])         //check if left half is sorted look in the right half
            {
                l=mid+1;
            }
            else                                //else look in the left half
                r=mid-1;
            
        }
        
        return -1;
    }
